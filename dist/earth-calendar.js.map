{"version":3,"file":"earth-calendar.js","sources":["../src/data.js","../src/calendar.js"],"sourcesContent":["\n/**\n * Data adapted from http://astropixels.com/ephemeris/soleq2001.html\n * and http://astropixels.com/ephemeris/perap2001.html\n * and https://www.yourzodiacsign.com/calendar/2021/\n * \n * Each year includes 14 dates: 12 sign cusps beginning with Aquarius,\n * followed by Perihelion and finally Aphelion. Times in UTC.\n */\nexport const yearlyData = {\n  '2021': [\n    '2021-01-19T20:39:00Z',\n    '2021-02-18T10:43:00Z',\n    '2021-03-20T09:37:00Z',\n    '2021-04-19T20:33:00Z',\n    '2021-05-20T19:37:00Z',\n    '2021-06-21T03:32:00Z',\n    '2021-07-22T14:26:00Z',\n    '2021-08-22T21:34:00Z',\n    '2021-09-22T19:21:00Z',\n    '2021-10-23T04:51:00Z',\n    '2021-11-22T02:33:00Z',\n    '2021-12-21T15:59:00Z',\n    '2021-01-02T13:51:00Z',\n    '2021-07-05T22:27:00Z'\n  ],\n  '2022': [\n    '2022-01-20T02:39:00Z',\n    '2022-02-18T16:42:00Z',\n    '2022-03-20T15:33:00Z',\n    '2022-04-20T02:24:00Z',\n    '2022-05-21T01:22:00Z',\n    '2022-06-21T09:13:00Z',\n    '2022-07-22T20:06:00Z',\n    '2022-08-23T03:16:00Z',\n    '2022-09-23T01:03:00Z',\n    '2022-10-23T10:35:00Z',\n    '2022-11-22T08:20:00Z',\n    '2022-12-21T21:48:00Z',\n    '2022-01-04T06:55:00Z',\n    '2022-07-04T07:11:00Z'\n  ],\n  // '2023': [\n  //   '2023-03-20T21:25:00Z',\n  //   '2023-06-21T14:58:00Z',\n  //   '2023-09-23T06:50:00Z',\n  //   '2023-12-22T03:28:00Z',\n  //   '2023-01-04T16:17:00Z',\n  //   '2023-07-06T20:07:00Z'\n  // ],\n  // '2024': [\n  //   '2024-03-20T03:07:00Z',\n  //   '2024-06-20T20:51:00Z',\n  //   '2024-09-22T12:44:00Z',\n  //   '2024-12-21T09:20:00Z',\n  //   '2024-01-03T00:39:00Z',\n  //   '2024-07-05T05:06:00Z'\n  // ],\n  // '2025': [\n  //   '2025-03-20T09:02:00Z',\n  //   '2025-06-21T02:42:00Z',\n  //   '2025-09-22T18:20:00Z',\n  //   '2025-12-21T15:03:00Z',\n  //   '2025-01-04T13:28:00Z',\n  //   '2025-07-03T19:55:00Z'\n  // ],\n  // '2026': [\n  //   '2026-03-20T14:46:00Z',\n  //   '2026-06-21T08:25:00Z',\n  //   '2026-09-23T00:06:00Z',\n  //   '2026-12-21T20:50:00Z',\n  //   '2026-01-03T17:16:00Z',\n  //   '2026-07-06T17:31:00Z'\n  // ],\n  // '2027': [\n  //   '2027-03-20T20:25:00Z',\n  //   '2027-06-21T14:11:00Z',\n  //   '2027-09-23T06:02:00Z',\n  //   '2027-12-22T02:43:00Z',\n  //   '2027-01-03T02:33:00Z',\n  //   '2027-07-05T05:06:00Z'\n  // ],\n  // '2028': [\n  //   '2028-03-20T02:17:00Z',\n  //   '2028-06-20T20:02:00Z',\n  //   '2028-09-22T11:45:00Z',\n  //   '2028-12-21T08:20:00Z',\n  //   '2028-01-05T12:28:00Z',\n  //   '2028-07-03T22:18:00Z'\n  // ],\n  // '2029': [\n  //   '2029-03-20T08:01:00Z',\n  //   '2029-06-21T01:48:00Z',\n  //   '2029-09-22T17:37:00Z',\n  //   '2029-12-21T14:14:00Z',\n  //   '2029-01-02T18:13:00Z',\n  //   '2029-07-06T05:12:00Z'\n  // ],\n  // '2030': [\n  //   '2030-03-20T13:51:00Z',\n  //   '2030-06-21T07:31:00Z',\n  //   '2030-09-22T23:27:00Z',\n  //   '2030-12-21T20:09:00Z',\n  //   '2030-01-03T10:12:00Z',\n  //   '2030-07-04T12:58:00Z'\n  // ]\n}\n","import { SVG } from '@svgdotjs/svg.js'\nimport { yearlyData } from './data.js'\n\nfunction isLeapYear (year) {\n  return ((year % 4 === 0) && (year % 100 !== 0)) || (year % 400 === 0)\n}\n\n/**\n * Calculate the length of the radius of an ellipse at a given angle\n * relative to the major axis.\n * \n * https://en.wikipedia.org/wiki/Ellipse#Polar_form_relative_to_center\n * \n * @param {Number} major Radius of major axis\n * @param {Number} minor Radius of minor axis\n * @param {Number} angle Angle in radians relative to major axis\n */\nfunction ellipticRadius (major, minor, angle) {\n  const aSinThetaSquared = Math.pow(major * Math.sin(angle), 2)\n  const bCosThetaSquared = Math.pow(minor * Math.cos(angle), 2)\n  return major * minor / Math.sqrt(aSinThetaSquared + bCosThetaSquared)\n}\n\n/**\n * Find the linear distance between two points.\n * \n * @param {Array} p1 x, y\n * @param {Array} p2 x, y\n * @returns Number\n */\nfunction linearDistance (p1, p2) {\n  const xd = Math.abs(p2[0] - p1[0])\n  const yd = Math.abs(p2[1] - p1[1])\n  return Math.sqrt(xd * xd + yd * yd)\n}\n\nfunction generatePoints (n, a, b, cx, cy, start, time) {\n  const total = n\n  const points = new Array(total)\n  const duration = 86400000\n  const limit = 2 * Math.PI\n  const step = limit / total\n  let x = 0\n  let y = 0\n  let s = 0\n  let d = 0\n  let avg = 0\n  let t = start\n  let prev = null\n  for (let i = 0; i < total; i++) {\n    x = Math.cos(t) * a\n    y = Math.sin(t) * b\n    x = cx + x\n    y = cy + y\n    s = time + i * duration\n    d = prev ? linearDistance(prev, [x, y]) : 0\n    avg += d\n    points[i] = [s, t, x, y, d, step]\n    prev = [x, y]\n    t -= step\n    if (t < 0) {\n      t += Math.PI * 2\n    }\n  }\n  d = linearDistance(prev, [points[0][2], points[0][3]])\n  points[0][4] = d\n  avg += d\n  avg /= total\n\n  return {\n    points: points,\n    spacing: avg\n  }\n}\n\nfunction equalizeSpacing (points, a, b, cx, cy) {\n\n  const p = points.points\n  const spacing = points.spacing\n  const limit = p.length\n  const step = Math.PI * 2 / limit\n  // const last = p[limit - 1]\n  const first = p[0]\n  let t = first[1]\n  let prev = [first[2], first[3]]\n  let ref = first[1]\n  let delta = 0\n  let current = null\n  let avgDelta = 0\n  let x = 0\n  let y = 0\n  let gap = 0\n  let avg = 0\n  let adjust = 0\n  for (let i = 1; i < limit; i++) {\n    current = p[i]\n    // console.log(current)\n    delta = (spacing - current[4]) / spacing\n    // console.log(delta)\n    avgDelta += Math.abs(delta)\n    // t -= step + delta * step\n    adjust = current[5] + current[5] * delta\n    // console.log(adjust)\n    t = ref - adjust\n    // console.log((current[1] - ref))\n    if (t < 0) {\n      t += Math.PI * 2\n    }\n    x = cx + Math.cos(t) * a\n    y = cy + Math.sin(t) * b\n    gap = linearDistance(prev, [x, y])\n    // console.log(gap)\n    avg += gap\n    current[1] = t\n    current[2] = x\n    current[3] = y\n    current[4] = gap\n    current[5] = adjust\n    prev = [x, y]\n    ref = t\n  }\n  current = p[0]\n  delta = (spacing - current[4]) / spacing\n  avgDelta += Math.abs(delta)\n  gap = linearDistance(prev, [current[2], current[3]])\n  current[4] = gap\n  avg += gap\n  points.spacing = avg / limit\n  return avgDelta / limit\n}\n\nfunction createDegrees (rotation, a, b, cx, cy) {\n\n  // Create a reference grid of 360 degrees\n  const degrees = generatePoints(360, a, b, cx, cy, rotation, 0)\n\n  // Equalize the spacing between points along the edge of the ellipse\n  let deviance = equalizeSpacing(degrees, a, b, cx, cy)\n  // Repeat until average deviance from equal spacing is less than 0.01%\n  while (deviance > 0.0001) {\n    deviance = equalizeSpacing(degrees, a, b, cx, cy)\n  }\n  \n  return degrees\n}\n\nfunction timesFromDates (yearData) {\n  return [\n    (new Date(yearData[0])).getTime(),\n    (new Date(yearData[1])).getTime(),\n    (new Date(yearData[2])).getTime(),\n    (new Date(yearData[3])).getTime(),\n    (new Date(yearData[4])).getTime(),\n    (new Date(yearData[5])).getTime(),\n    (new Date(yearData[6])).getTime(),\n    (new Date(yearData[7])).getTime(),\n    (new Date(yearData[8])).getTime(),\n    (new Date(yearData[9])).getTime(),\n    (new Date(yearData[10])).getTime(),\n    (new Date(yearData[11])).getTime(),\n    (new Date(yearData[12])).getTime(),\n    (new Date(yearData[13])).getTime()\n  ]\n}\n\nfunction createDays (year, yearData, degrees, rotation, a, b, cx, cy) {\n  const daysInYear = isLeapYear(year) ? 366 : 365\n  // Extract times from yearData\n  const times = timesFromDates(yearData)\n  const points = degrees.points\n  // let cardinal = points[180]\n  const newYear = new Date(year, 0, 1)\n  const newYearTime = newYear.getTime()\n  const nextYear = new Date(year + 1, 0, 1)\n  const nextYearTime = nextYear.getTime()\n  const delta1 = nextYearTime - times[11]\n  const delta2 = times[12] - newYearTime\n  // Estimate angle between new year's day and perihelion\n  const offset = rotation * delta2 / (delta1 + delta2)\n  // console.log(offset)\n  // console.log(rotation)\n  let initialTime = newYearTime\n  let startAngle = Math.PI + offset\n\n  // Degrees array currently starts at summer solstice\n  // So 0 degrees Aquarius is 210 degrees later (index 209)\n  let degreeIndex = 209\n  let nextCuspAngle = points[degreeIndex][1]\n  let prevCuspDegreeAngle = 0\n  let startDelta = 0\n  let startAngleDelta = 0\n  let t = 0\n  const days = []\n  let cutoff = 0\n  let distance = 0\n  let fullAngle = 0\n  let actualAngle = 0\n  let nDays = 0\n  let increment = 0\n  let date = newYear\n\n  for (let i = 0; i < 12; i++) {\n\n    if (i > 0) {\n      // Fraction of day from previous cusp to start of first day in present sign\n      startDelta = (initialTime - times[i - 1]) / 86400000\n      startAngleDelta = startDelta * prevCuspDegreeAngle\n    }\n\n    // Local time of next sign cusp\n    cutoff = new Date(times[i])\n    // Local start of day of next sign cusp\n    const earlyCutoff = new Date(cutoff.getFullYear(), cutoff.getMonth(), cutoff.getDate())\n    // Milliseconds between start of day and sign cusp\n    const cutoffDelta = times[i] - earlyCutoff.getTime()\n\n    const cutoffFraction = cutoffDelta / 86400000\n\n    const degreeAngle = points[degreeIndex][5]\n\n    const cutoffAngle = degreeAngle * cutoffFraction * 360 / daysInYear\n\n    // Total milliseconds of current period\n    distance = times[i] - initialTime + startDelta\n    // cutoffDelta as a fraction of the total distance\n    const adjust = (startDelta + cutoffDelta) / distance\n    fullAngle = startAngle - nextCuspAngle\n    if (fullAngle < 0) {\n      fullAngle += Math.PI * 2\n    }\n    // actualAngle = fullAngle - fullAngle * adjust\n    actualAngle = fullAngle - cutoffAngle - startAngleDelta\n\n    nDays = Math.round((earlyCutoff.getTime() - initialTime) / 86400000)\n    increment = actualAngle / nDays\n    startAngle -= startAngleDelta\n    for (let j = 0; j <= nDays; j++) {\n      t = startAngle - increment * j\n      days.push([\n        t,\n        cx + Math.cos(t) * a,\n        cy + Math.sin(t) * b,\n        date.getDate() === 1 ? 1 : 0\n      ])\n      date.setDate(date.getDate() + 1)\n    }\n\n    // Advance to next pair of cusps\n    startAngle = nextCuspAngle\n    prevCuspDegreeAngle = degreeAngle\n    degreeIndex += 30\n    degreeIndex %= 360\n    nextCuspAngle = points[degreeIndex][1]\n    // Advance cutoff date by one day\n    earlyCutoff.setDate(earlyCutoff.getDate() + 1)\n    // Reset initial time to start of first day in next sign\n    initialTime = earlyCutoff.getTime()\n  }\n  // Finally, position the days between winter solstice and following new year\n  startDelta = (initialTime - times[11]) / 86400000\n  startAngleDelta = startDelta * prevCuspDegreeAngle\n  distance = nextYearTime - initialTime + startDelta\n  nextCuspAngle = Math.PI + offset\n  fullAngle = startAngle - nextCuspAngle\n  if (fullAngle < 0) {\n    fullAngle += Math.PI * 2\n  }\n  actualAngle = fullAngle - startAngleDelta\n  nDays = Math.round((nextYearTime - initialTime) / 86400000)\n  increment = actualAngle / nDays\n  startAngle -= startAngleDelta\n  for (let j = 0; j < nDays; j++) {\n    t = startAngle - increment * j\n    days.push([\n      t,\n      cx + Math.cos(t) * a,\n      cy + Math.sin(t) * b,\n      date.getDate() === 1 ? 1 : 0\n    ])\n    date.setDate(date.getDate() + 1)\n  }\n\n  return days\n}\n\nexport function drawCalendar (element) {\n  const container = document.querySelector(element)\n  const w = container.clientWidth\n  const h = Math.max(container.clientHeight, w * 0.8)\n  const cx = w / 2\n  const cy = h / 2\n  const padding = Math.round(w / 30)\n  const thickness = w / 450\n  const inset = padding * 0.75\n  const draw = SVG().addTo(element).size(w, h)\n\n  const time = new Date()\n  // time.setFullYear(time.getFullYear() + 1)\n  const currentYear = time.getFullYear() // local time\n  const daysInYear = isLeapYear(currentYear) ? 366 : 365\n  const yearData = yearlyData[currentYear]\n  const cardinal0 = new Date(yearData[2])\n  const cardinal1 = new Date(yearData[5])\n  const cardinal2 = new Date(yearData[8])\n  const cardinal3 = new Date(yearData[11])\n  const perihelion = new Date(yearData[12])\n  const aphelion = new Date(yearData[13])\n  const cardinal0Time = cardinal0.getTime()\n  const cardinal1Time = cardinal1.getTime()\n  const cardinal2Time = cardinal2.getTime()\n  const cardinal3Time = cardinal3.getTime()\n  const perihelionTime = perihelion.getTime()\n  const aphelionTime = aphelion.getTime()\n  const aphelionDays = (aphelionTime - cardinal1Time) / 86400000\n\n  // Approximate orbital rotation for the current year (summer solstice relative to aphelion)\n  const rotation = 360 * aphelionDays / daysInYear\n  const rotationRad = rotation * Math.PI / 180\n\n  const outerDiameterX = w - padding * 2\n  const outerDiameterY = h - padding * 2\n  const innerDiameterX = outerDiameterX - inset * 2\n  const innerDiameterY = outerDiameterY - inset * 2\n  const a = outerDiameterX / 2\n  const b = outerDiameterY / 2\n\n  const rings = draw.group()\n\n  const degrees = createDegrees(rotationRad, a, b, cx, cy)\n  const degreePoints = degrees.points\n\n  const days = createDays(currentYear, yearData, degrees, rotationRad, a, b, cx, cy)\n\n  // Draw days\n  for (let i = 0; i < days.length; i++) {\n    if (days[i][3] === 1) {\n      rings.line(cx, cy, days[i][1], days[i][2]).stroke({ width: thickness / 2, color: '#c54' })\n    } else {\n      rings.line(cx, cy, days[i][1], days[i][2]).stroke({ width: thickness / 2, color: '#bbb' })\n    }\n  }\n\n  // Draw outer rings\n  rings.ellipse(outerDiameterX, outerDiameterY).stroke({ width: thickness, color: '#333' }).fill('none').move(padding, padding)\n  rings.ellipse(innerDiameterX, innerDiameterY).stroke({ width: thickness, color: '#333' }).fill('none').move(padding + inset, padding + inset)\n  \n\n  // Draw sign cusps\n  for (let i = 0; i < 180; i += 30) {\n    let degree0 = degreePoints[i]\n    let degree180 = degreePoints[i + 180]\n    rings.line(degree0[2], degree0[3], degree180[2], degree180[3]).stroke({ width: thickness, color: '#37b' })\n  }\n\n  // Draw sun\n  rings.circle(h / 5).stroke({ width: thickness, color: '#333' }).fill('#f9f3df').attr({\n    cx: cx - w/4,\n    cy: cy\n  })\n\n  // Draw cardinal Earths\n  for (let i = 0; i < 360; i += 90) {\n    const cardinalAngle = degreePoints[i][1]\n    rings.circle(h / 10).stroke({ width: thickness, color: '#333' }).fill('#ffffff').attr({\n      cx: cx + Math.cos(cardinalAngle) * (a - padding / 2),\n      cy: cy + Math.sin(cardinalAngle) * (b - padding / 2)\n    })\n  }\n\n  rings.transform({\n    rotate: -rotation\n  })\n\n  return draw\n}\n"],"names":["yearlyData","isLeapYear","year","linearDistance","p1","p2","xd","Math","abs","yd","sqrt","generatePoints","n","a","b","cx","cy","start","time","total","points","Array","duration","limit","PI","step","x","y","s","d","avg","t","prev","i","cos","sin","spacing","equalizeSpacing","p","length","first","ref","delta","current","avgDelta","gap","adjust","createDegrees","rotation","degrees","deviance","timesFromDates","yearData","Date","getTime","createDays","daysInYear","times","newYear","newYearTime","nextYear","nextYearTime","delta1","delta2","offset","initialTime","startAngle","degreeIndex","nextCuspAngle","prevCuspDegreeAngle","startDelta","startAngleDelta","days","cutoff","fullAngle","actualAngle","nDays","increment","date","earlyCutoff","getFullYear","getMonth","getDate","cutoffDelta","cutoffFraction","degreeAngle","cutoffAngle","round","j","push","setDate","drawCalendar","element","container","document","querySelector","w","clientWidth","h","max","clientHeight","padding","thickness","inset","draw","SVG","addTo","size","currentYear","cardinal0","cardinal1","cardinal2","cardinal3","perihelion","aphelion","cardinal1Time","aphelionTime","aphelionDays","rotationRad","outerDiameterX","outerDiameterY","innerDiameterX","innerDiameterY","rings","group","degreePoints","line","stroke","width","color","ellipse","fill","move","degree0","degree180","circle","attr","cardinalAngle","transform","rotate"],"mappings":";;;;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACO,IAAMA,UAAU,GAAG;EACxB,UAAQ,CACN,sBADM,EAEN,sBAFM,EAGN,sBAHM,EAIN,sBAJM,EAKN,sBALM,EAMN,sBANM,EAON,sBAPM,EAQN,sBARM,EASN,sBATM,EAUN,sBAVM,EAWN,sBAXM,EAYN,sBAZM,EAaN,sBAbM,EAcN,sBAdM,CADgB;EAiBxB,UAAQ,CACN,sBADM,EAEN,sBAFM,EAGN,sBAHM,EAIN,sBAJM,EAKN,sBALM,EAMN,sBANM,EAON,sBAPM,EAQN,sBARM,EASN,sBATM,EAUN,sBAVM,EAWN,sBAXM,EAYN,sBAZM,EAaN,sBAbM,EAcN,sBAdM,CAjBgB;EAkCxB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAhGwB,CAAnB;;ECNP,SAASC,UAAT,CAAqBC,IAArB,EAA2B;EACzB,SAASA,IAAI,GAAG,CAAP,KAAa,CAAd,IAAqBA,IAAI,GAAG,GAAP,KAAe,CAArC,IAA6CA,IAAI,GAAG,GAAP,KAAe,CAAnE;EACD;EAkBD;EACA;EACA;EACA;EACA;EACA;EACA;;;EACA,SAASC,cAAT,CAAyBC,EAAzB,EAA6BC,EAA7B,EAAiC;EAC/B,MAAMC,EAAE,GAAGC,IAAI,CAACC,GAAL,CAASH,EAAE,CAAC,CAAD,CAAF,GAAQD,EAAE,CAAC,CAAD,CAAnB,CAAX;EACA,MAAMK,EAAE,GAAGF,IAAI,CAACC,GAAL,CAASH,EAAE,CAAC,CAAD,CAAF,GAAQD,EAAE,CAAC,CAAD,CAAnB,CAAX;EACA,SAAOG,IAAI,CAACG,IAAL,CAAUJ,EAAE,GAAGA,EAAL,GAAUG,EAAE,GAAGA,EAAzB,CAAP;EACD;;EAED,SAASE,cAAT,CAAyBC,CAAzB,EAA4BC,CAA5B,EAA+BC,CAA/B,EAAkCC,EAAlC,EAAsCC,EAAtC,EAA0CC,KAA1C,EAAiDC,IAAjD,EAAuD;EACrD,MAAMC,KAAK,GAAGP,CAAd;EACA,MAAMQ,MAAM,GAAG,IAAIC,KAAJ,CAAUF,KAAV,CAAf;EACA,MAAMG,QAAQ,GAAG,QAAjB;EACA,MAAMC,KAAK,GAAG,IAAIhB,IAAI,CAACiB,EAAvB;EACA,MAAMC,IAAI,GAAGF,KAAK,GAAGJ,KAArB;EACA,MAAIO,CAAC,GAAG,CAAR;EACA,MAAIC,CAAC,GAAG,CAAR;EACA,MAAIC,CAAC,GAAG,CAAR;EACA,MAAIC,CAAC,GAAG,CAAR;EACA,MAAIC,GAAG,GAAG,CAAV;EACA,MAAIC,CAAC,GAAGd,KAAR;EACA,MAAIe,IAAI,GAAG,IAAX;;EACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGd,KAApB,EAA2Bc,CAAC,EAA5B,EAAgC;EAC9BP,IAAAA,CAAC,GAAGnB,IAAI,CAAC2B,GAAL,CAASH,CAAT,IAAclB,CAAlB;EACAc,IAAAA,CAAC,GAAGpB,IAAI,CAAC4B,GAAL,CAASJ,CAAT,IAAcjB,CAAlB;EACAY,IAAAA,CAAC,GAAGX,EAAE,GAAGW,CAAT;EACAC,IAAAA,CAAC,GAAGX,EAAE,GAAGW,CAAT;EACAC,IAAAA,CAAC,GAAGV,IAAI,GAAGe,CAAC,GAAGX,QAAf;EACAO,IAAAA,CAAC,GAAGG,IAAI,GAAG7B,cAAc,CAAC6B,IAAD,EAAO,CAACN,CAAD,EAAIC,CAAJ,CAAP,CAAjB,GAAkC,CAA1C;EACAG,IAAAA,GAAG,IAAID,CAAP;EACAT,IAAAA,MAAM,CAACa,CAAD,CAAN,GAAY,CAACL,CAAD,EAAIG,CAAJ,EAAOL,CAAP,EAAUC,CAAV,EAAaE,CAAb,EAAgBJ,IAAhB,CAAZ;EACAO,IAAAA,IAAI,GAAG,CAACN,CAAD,EAAIC,CAAJ,CAAP;EACAI,IAAAA,CAAC,IAAIN,IAAL;;EACA,QAAIM,CAAC,GAAG,CAAR,EAAW;EACTA,MAAAA,CAAC,IAAIxB,IAAI,CAACiB,EAAL,GAAU,CAAf;EACD;EACF;;EACDK,EAAAA,CAAC,GAAG1B,cAAc,CAAC6B,IAAD,EAAO,CAACZ,MAAM,CAAC,CAAD,CAAN,CAAU,CAAV,CAAD,EAAeA,MAAM,CAAC,CAAD,CAAN,CAAU,CAAV,CAAf,CAAP,CAAlB;EACAA,EAAAA,MAAM,CAAC,CAAD,CAAN,CAAU,CAAV,IAAeS,CAAf;EACAC,EAAAA,GAAG,IAAID,CAAP;EACAC,EAAAA,GAAG,IAAIX,KAAP;EAEA,SAAO;EACLC,IAAAA,MAAM,EAAEA,MADH;EAELgB,IAAAA,OAAO,EAAEN;EAFJ,GAAP;EAID;;EAED,SAASO,eAAT,CAA0BjB,MAA1B,EAAkCP,CAAlC,EAAqCC,CAArC,EAAwCC,EAAxC,EAA4CC,EAA5C,EAAgD;EAE9C,MAAMsB,CAAC,GAAGlB,MAAM,CAACA,MAAjB;EACA,MAAMgB,OAAO,GAAGhB,MAAM,CAACgB,OAAvB;EACA,MAAMb,KAAK,GAAGe,CAAC,CAACC,MAAhB;;EAGA,MAAMC,KAAK,GAAGF,CAAC,CAAC,CAAD,CAAf;EACA,MAAIP,CAAC,GAAGS,KAAK,CAAC,CAAD,CAAb;EACA,MAAIR,IAAI,GAAG,CAACQ,KAAK,CAAC,CAAD,CAAN,EAAWA,KAAK,CAAC,CAAD,CAAhB,CAAX;EACA,MAAIC,GAAG,GAAGD,KAAK,CAAC,CAAD,CAAf;EACA,MAAIE,KAAK,GAAG,CAAZ;EACA,MAAIC,OAAO,GAAG,IAAd;EACA,MAAIC,QAAQ,GAAG,CAAf;EACA,MAAIlB,CAAC,GAAG,CAAR;EACA,MAAIC,CAAC,GAAG,CAAR;EACA,MAAIkB,GAAG,GAAG,CAAV;EACA,MAAIf,GAAG,GAAG,CAAV;EACA,MAAIgB,MAAM,GAAG,CAAb;;EACA,OAAK,IAAIb,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGV,KAApB,EAA2BU,CAAC,EAA5B,EAAgC;EAC9BU,IAAAA,OAAO,GAAGL,CAAC,CAACL,CAAD,CAAX,CAD8B;;EAG9BS,IAAAA,KAAK,GAAG,CAACN,OAAO,GAAGO,OAAO,CAAC,CAAD,CAAlB,IAAyBP,OAAjC,CAH8B;;EAK9BQ,IAAAA,QAAQ,IAAIrC,IAAI,CAACC,GAAL,CAASkC,KAAT,CAAZ,CAL8B;;EAO9BI,IAAAA,MAAM,GAAGH,OAAO,CAAC,CAAD,CAAP,GAAaA,OAAO,CAAC,CAAD,CAAP,GAAaD,KAAnC,CAP8B;;EAS9BX,IAAAA,CAAC,GAAGU,GAAG,GAAGK,MAAV,CAT8B;;EAW9B,QAAIf,CAAC,GAAG,CAAR,EAAW;EACTA,MAAAA,CAAC,IAAIxB,IAAI,CAACiB,EAAL,GAAU,CAAf;EACD;;EACDE,IAAAA,CAAC,GAAGX,EAAE,GAAGR,IAAI,CAAC2B,GAAL,CAASH,CAAT,IAAclB,CAAvB;EACAc,IAAAA,CAAC,GAAGX,EAAE,GAAGT,IAAI,CAAC4B,GAAL,CAASJ,CAAT,IAAcjB,CAAvB;EACA+B,IAAAA,GAAG,GAAG1C,cAAc,CAAC6B,IAAD,EAAO,CAACN,CAAD,EAAIC,CAAJ,CAAP,CAApB,CAhB8B;;EAkB9BG,IAAAA,GAAG,IAAIe,GAAP;EACAF,IAAAA,OAAO,CAAC,CAAD,CAAP,GAAaZ,CAAb;EACAY,IAAAA,OAAO,CAAC,CAAD,CAAP,GAAajB,CAAb;EACAiB,IAAAA,OAAO,CAAC,CAAD,CAAP,GAAahB,CAAb;EACAgB,IAAAA,OAAO,CAAC,CAAD,CAAP,GAAaE,GAAb;EACAF,IAAAA,OAAO,CAAC,CAAD,CAAP,GAAaG,MAAb;EACAd,IAAAA,IAAI,GAAG,CAACN,CAAD,EAAIC,CAAJ,CAAP;EACAc,IAAAA,GAAG,GAAGV,CAAN;EACD;;EACDY,EAAAA,OAAO,GAAGL,CAAC,CAAC,CAAD,CAAX;EACAI,EAAAA,KAAK,GAAG,CAACN,OAAO,GAAGO,OAAO,CAAC,CAAD,CAAlB,IAAyBP,OAAjC;EACAQ,EAAAA,QAAQ,IAAIrC,IAAI,CAACC,GAAL,CAASkC,KAAT,CAAZ;EACAG,EAAAA,GAAG,GAAG1C,cAAc,CAAC6B,IAAD,EAAO,CAACW,OAAO,CAAC,CAAD,CAAR,EAAaA,OAAO,CAAC,CAAD,CAApB,CAAP,CAApB;EACAA,EAAAA,OAAO,CAAC,CAAD,CAAP,GAAaE,GAAb;EACAf,EAAAA,GAAG,IAAIe,GAAP;EACAzB,EAAAA,MAAM,CAACgB,OAAP,GAAiBN,GAAG,GAAGP,KAAvB;EACA,SAAOqB,QAAQ,GAAGrB,KAAlB;EACD;;EAED,SAASwB,aAAT,CAAwBC,QAAxB,EAAkCnC,CAAlC,EAAqCC,CAArC,EAAwCC,EAAxC,EAA4CC,EAA5C,EAAgD;EAE9C;EACA,MAAMiC,OAAO,GAAGtC,cAAc,CAAC,GAAD,EAAME,CAAN,EAASC,CAAT,EAAYC,EAAZ,EAAgBC,EAAhB,EAAoBgC,QAApB,EAA8B,CAA9B,CAA9B,CAH8C;;EAM9C,MAAIE,QAAQ,GAAGb,eAAe,CAACY,OAAD,EAAUpC,CAAV,EAAaC,CAAb,EAAgBC,EAAhB,EAAoBC,EAApB,CAA9B,CAN8C;;EAQ9C,SAAOkC,QAAQ,GAAG,MAAlB,EAA0B;EACxBA,IAAAA,QAAQ,GAAGb,eAAe,CAACY,OAAD,EAAUpC,CAAV,EAAaC,CAAb,EAAgBC,EAAhB,EAAoBC,EAApB,CAA1B;EACD;;EAED,SAAOiC,OAAP;EACD;;EAED,SAASE,cAAT,CAAyBC,QAAzB,EAAmC;EACjC,SAAO,CACJ,IAAIC,IAAJ,CAASD,QAAQ,CAAC,CAAD,CAAjB,CAAD,CAAwBE,OAAxB,EADK,EAEJ,IAAID,IAAJ,CAASD,QAAQ,CAAC,CAAD,CAAjB,CAAD,CAAwBE,OAAxB,EAFK,EAGJ,IAAID,IAAJ,CAASD,QAAQ,CAAC,CAAD,CAAjB,CAAD,CAAwBE,OAAxB,EAHK,EAIJ,IAAID,IAAJ,CAASD,QAAQ,CAAC,CAAD,CAAjB,CAAD,CAAwBE,OAAxB,EAJK,EAKJ,IAAID,IAAJ,CAASD,QAAQ,CAAC,CAAD,CAAjB,CAAD,CAAwBE,OAAxB,EALK,EAMJ,IAAID,IAAJ,CAASD,QAAQ,CAAC,CAAD,CAAjB,CAAD,CAAwBE,OAAxB,EANK,EAOJ,IAAID,IAAJ,CAASD,QAAQ,CAAC,CAAD,CAAjB,CAAD,CAAwBE,OAAxB,EAPK,EAQJ,IAAID,IAAJ,CAASD,QAAQ,CAAC,CAAD,CAAjB,CAAD,CAAwBE,OAAxB,EARK,EASJ,IAAID,IAAJ,CAASD,QAAQ,CAAC,CAAD,CAAjB,CAAD,CAAwBE,OAAxB,EATK,EAUJ,IAAID,IAAJ,CAASD,QAAQ,CAAC,CAAD,CAAjB,CAAD,CAAwBE,OAAxB,EAVK,EAWJ,IAAID,IAAJ,CAASD,QAAQ,CAAC,EAAD,CAAjB,CAAD,CAAyBE,OAAzB,EAXK,EAYJ,IAAID,IAAJ,CAASD,QAAQ,CAAC,EAAD,CAAjB,CAAD,CAAyBE,OAAzB,EAZK,EAaJ,IAAID,IAAJ,CAASD,QAAQ,CAAC,EAAD,CAAjB,CAAD,CAAyBE,OAAzB,EAbK,EAcJ,IAAID,IAAJ,CAASD,QAAQ,CAAC,EAAD,CAAjB,CAAD,CAAyBE,OAAzB,EAdK,CAAP;EAgBD;;EAED,SAASC,UAAT,CAAqBrD,IAArB,EAA2BkD,QAA3B,EAAqCH,OAArC,EAA8CD,QAA9C,EAAwDnC,CAAxD,EAA2DC,CAA3D,EAA8DC,EAA9D,EAAkEC,EAAlE,EAAsE;EACpE,MAAMwC,UAAU,GAAGvD,UAAU,CAACC,IAAD,CAAV,GAAmB,GAAnB,GAAyB,GAA5C,CADoE;;EAGpE,MAAMuD,KAAK,GAAGN,cAAc,CAACC,QAAD,CAA5B;EACA,MAAMhC,MAAM,GAAG6B,OAAO,CAAC7B,MAAvB,CAJoE;;EAMpE,MAAMsC,OAAO,GAAG,IAAIL,IAAJ,CAASnD,IAAT,EAAe,CAAf,EAAkB,CAAlB,CAAhB;EACA,MAAMyD,WAAW,GAAGD,OAAO,CAACJ,OAAR,EAApB;EACA,MAAMM,QAAQ,GAAG,IAAIP,IAAJ,CAASnD,IAAI,GAAG,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,CAAjB;EACA,MAAM2D,YAAY,GAAGD,QAAQ,CAACN,OAAT,EAArB;EACA,MAAMQ,MAAM,GAAGD,YAAY,GAAGJ,KAAK,CAAC,EAAD,CAAnC;EACA,MAAMM,MAAM,GAAGN,KAAK,CAAC,EAAD,CAAL,GAAYE,WAA3B,CAXoE;;EAapE,MAAMK,MAAM,GAAGhB,QAAQ,GAAGe,MAAX,IAAqBD,MAAM,GAAGC,MAA9B,CAAf,CAboE;EAepE;;EACA,MAAIE,WAAW,GAAGN,WAAlB;EACA,MAAIO,UAAU,GAAG3D,IAAI,CAACiB,EAAL,GAAUwC,MAA3B,CAjBoE;EAoBpE;;EACA,MAAIG,WAAW,GAAG,GAAlB;EACA,MAAIC,aAAa,GAAGhD,MAAM,CAAC+C,WAAD,CAAN,CAAoB,CAApB,CAApB;EACA,MAAIE,mBAAmB,GAAG,CAA1B;EACA,MAAIC,UAAU,GAAG,CAAjB;EACA,MAAIC,eAAe,GAAG,CAAtB;EACA,MAAIxC,CAAC,GAAG,CAAR;EACA,MAAMyC,IAAI,GAAG,EAAb;EACA,MAAIC,MAAM,GAAG,CAAb;EAEA,MAAIC,SAAS,GAAG,CAAhB;EACA,MAAIC,WAAW,GAAG,CAAlB;EACA,MAAIC,KAAK,GAAG,CAAZ;EACA,MAAIC,SAAS,GAAG,CAAhB;EACA,MAAIC,IAAI,GAAGpB,OAAX;;EAEA,OAAK,IAAIzB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;EAE3B,QAAIA,CAAC,GAAG,CAAR,EAAW;EACT;EACAqC,MAAAA,UAAU,GAAG,CAACL,WAAW,GAAGR,KAAK,CAACxB,CAAC,GAAG,CAAL,CAApB,IAA+B,QAA5C;EACAsC,MAAAA,eAAe,GAAGD,UAAU,GAAGD,mBAA/B;EACD,KAN0B;;;EAS3BI,IAAAA,MAAM,GAAG,IAAIpB,IAAJ,CAASI,KAAK,CAACxB,CAAD,CAAd,CAAT,CAT2B;;EAW3B,QAAM8C,WAAW,GAAG,IAAI1B,IAAJ,CAASoB,MAAM,CAACO,WAAP,EAAT,EAA+BP,MAAM,CAACQ,QAAP,EAA/B,EAAkDR,MAAM,CAACS,OAAP,EAAlD,CAApB,CAX2B;;EAa3B,QAAMC,WAAW,GAAG1B,KAAK,CAACxB,CAAD,CAAL,GAAW8C,WAAW,CAACzB,OAAZ,EAA/B;EAEA,QAAM8B,cAAc,GAAGD,WAAW,GAAG,QAArC;EAEA,QAAME,WAAW,GAAGjE,MAAM,CAAC+C,WAAD,CAAN,CAAoB,CAApB,CAApB;EAEA,QAAMmB,WAAW,GAAGD,WAAW,GAAGD,cAAd,GAA+B,GAA/B,GAAqC5B,UAAzD,CAnB2B;EAyB3BkB,IAAAA,SAAS,GAAGR,UAAU,GAAGE,aAAzB;;EACA,QAAIM,SAAS,GAAG,CAAhB,EAAmB;EACjBA,MAAAA,SAAS,IAAInE,IAAI,CAACiB,EAAL,GAAU,CAAvB;EACD,KA5B0B;;;EA8B3BmD,IAAAA,WAAW,GAAGD,SAAS,GAAGY,WAAZ,GAA0Bf,eAAxC;EAEAK,IAAAA,KAAK,GAAGrE,IAAI,CAACgF,KAAL,CAAW,CAACR,WAAW,CAACzB,OAAZ,KAAwBW,WAAzB,IAAwC,QAAnD,CAAR;EACAY,IAAAA,SAAS,GAAGF,WAAW,GAAGC,KAA1B;EACAV,IAAAA,UAAU,IAAIK,eAAd;;EACA,SAAK,IAAIiB,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIZ,KAArB,EAA4BY,CAAC,EAA7B,EAAiC;EAC/BzD,MAAAA,CAAC,GAAGmC,UAAU,GAAGW,SAAS,GAAGW,CAA7B;EACAhB,MAAAA,IAAI,CAACiB,IAAL,CAAU,CACR1D,CADQ,EAERhB,EAAE,GAAGR,IAAI,CAAC2B,GAAL,CAASH,CAAT,IAAclB,CAFX,EAGRG,EAAE,GAAGT,IAAI,CAAC4B,GAAL,CAASJ,CAAT,IAAcjB,CAHX,EAIRgE,IAAI,CAACI,OAAL,OAAmB,CAAnB,GAAuB,CAAvB,GAA2B,CAJnB,CAAV;EAMAJ,MAAAA,IAAI,CAACY,OAAL,CAAaZ,IAAI,CAACI,OAAL,KAAiB,CAA9B;EACD,KA5C0B;;;EA+C3BhB,IAAAA,UAAU,GAAGE,aAAb;EACAC,IAAAA,mBAAmB,GAAGgB,WAAtB;EACAlB,IAAAA,WAAW,IAAI,EAAf;EACAA,IAAAA,WAAW,IAAI,GAAf;EACAC,IAAAA,aAAa,GAAGhD,MAAM,CAAC+C,WAAD,CAAN,CAAoB,CAApB,CAAhB,CAnD2B;;EAqD3BY,IAAAA,WAAW,CAACW,OAAZ,CAAoBX,WAAW,CAACG,OAAZ,KAAwB,CAA5C,EArD2B;;EAuD3BjB,IAAAA,WAAW,GAAGc,WAAW,CAACzB,OAAZ,EAAd;EACD,GA5FmE;;;EA8FpEgB,EAAAA,UAAU,GAAG,CAACL,WAAW,GAAGR,KAAK,CAAC,EAAD,CAApB,IAA4B,QAAzC;EACAc,EAAAA,eAAe,GAAGD,UAAU,GAAGD,mBAA/B;EAEAD,EAAAA,aAAa,GAAG7D,IAAI,CAACiB,EAAL,GAAUwC,MAA1B;EACAU,EAAAA,SAAS,GAAGR,UAAU,GAAGE,aAAzB;;EACA,MAAIM,SAAS,GAAG,CAAhB,EAAmB;EACjBA,IAAAA,SAAS,IAAInE,IAAI,CAACiB,EAAL,GAAU,CAAvB;EACD;;EACDmD,EAAAA,WAAW,GAAGD,SAAS,GAAGH,eAA1B;EACAK,EAAAA,KAAK,GAAGrE,IAAI,CAACgF,KAAL,CAAW,CAAC1B,YAAY,GAAGI,WAAhB,IAA+B,QAA1C,CAAR;EACAY,EAAAA,SAAS,GAAGF,WAAW,GAAGC,KAA1B;EACAV,EAAAA,UAAU,IAAIK,eAAd;;EACA,OAAK,IAAIiB,EAAC,GAAG,CAAb,EAAgBA,EAAC,GAAGZ,KAApB,EAA2BY,EAAC,EAA5B,EAAgC;EAC9BzD,IAAAA,CAAC,GAAGmC,UAAU,GAAGW,SAAS,GAAGW,EAA7B;EACAhB,IAAAA,IAAI,CAACiB,IAAL,CAAU,CACR1D,CADQ,EAERhB,EAAE,GAAGR,IAAI,CAAC2B,GAAL,CAASH,CAAT,IAAclB,CAFX,EAGRG,EAAE,GAAGT,IAAI,CAAC4B,GAAL,CAASJ,CAAT,IAAcjB,CAHX,EAIRgE,IAAI,CAACI,OAAL,OAAmB,CAAnB,GAAuB,CAAvB,GAA2B,CAJnB,CAAV;EAMAJ,IAAAA,IAAI,CAACY,OAAL,CAAaZ,IAAI,CAACI,OAAL,KAAiB,CAA9B;EACD;;EAED,SAAOV,IAAP;EACD;;EAEM,SAASmB,YAAT,CAAuBC,OAAvB,EAAgC;EACrC,MAAMC,SAAS,GAAGC,QAAQ,CAACC,aAAT,CAAuBH,OAAvB,CAAlB;EACA,MAAMI,CAAC,GAAGH,SAAS,CAACI,WAApB;EACA,MAAMC,CAAC,GAAG3F,IAAI,CAAC4F,GAAL,CAASN,SAAS,CAACO,YAAnB,EAAiCJ,CAAC,GAAG,GAArC,CAAV;EACA,MAAMjF,EAAE,GAAGiF,CAAC,GAAG,CAAf;EACA,MAAMhF,EAAE,GAAGkF,CAAC,GAAG,CAAf;EACA,MAAMG,OAAO,GAAG9F,IAAI,CAACgF,KAAL,CAAWS,CAAC,GAAG,EAAf,CAAhB;EACA,MAAMM,SAAS,GAAGN,CAAC,GAAG,GAAtB;EACA,MAAMO,KAAK,GAAGF,OAAO,GAAG,IAAxB;EACA,MAAMG,IAAI,GAAGC,UAAG,GAAGC,KAAN,CAAYd,OAAZ,EAAqBe,IAArB,CAA0BX,CAA1B,EAA6BE,CAA7B,CAAb;EAEA,MAAMhF,IAAI,GAAG,IAAImC,IAAJ,EAAb,CAXqC;;EAarC,MAAMuD,WAAW,GAAG1F,IAAI,CAAC8D,WAAL,EAApB,CAbqC;;EAcrC,MAAMxB,UAAU,GAAGvD,UAAU,CAAC2G,WAAD,CAAV,GAA0B,GAA1B,GAAgC,GAAnD;EACA,MAAMxD,QAAQ,GAAGpD,UAAU,CAAC4G,WAAD,CAA3B;EACA,MAAMC,SAAS,GAAG,IAAIxD,IAAJ,CAASD,QAAQ,CAAC,CAAD,CAAjB,CAAlB;EACA,MAAM0D,SAAS,GAAG,IAAIzD,IAAJ,CAASD,QAAQ,CAAC,CAAD,CAAjB,CAAlB;EACA,MAAM2D,SAAS,GAAG,IAAI1D,IAAJ,CAASD,QAAQ,CAAC,CAAD,CAAjB,CAAlB;EACA,MAAM4D,SAAS,GAAG,IAAI3D,IAAJ,CAASD,QAAQ,CAAC,EAAD,CAAjB,CAAlB;EACA,MAAM6D,UAAU,GAAG,IAAI5D,IAAJ,CAASD,QAAQ,CAAC,EAAD,CAAjB,CAAnB;EACA,MAAM8D,QAAQ,GAAG,IAAI7D,IAAJ,CAASD,QAAQ,CAAC,EAAD,CAAjB,CAAjB;EACA,EAAsByD,SAAS,CAACvD,OAAV;EACtB,MAAM6D,aAAa,GAAGL,SAAS,CAACxD,OAAV,EAAtB;EACA,EAAsByD,SAAS,CAACzD,OAAV;EACtB,EAAsB0D,SAAS,CAAC1D,OAAV;EACtB,EAAuB2D,UAAU,CAAC3D,OAAX;EACvB,MAAM8D,YAAY,GAAGF,QAAQ,CAAC5D,OAAT,EAArB;EACA,MAAM+D,YAAY,GAAG,CAACD,YAAY,GAAGD,aAAhB,IAAiC,QAAtD,CA5BqC;;EA+BrC,MAAMnE,QAAQ,GAAG,MAAMqE,YAAN,GAAqB7D,UAAtC;EACA,MAAM8D,WAAW,GAAGtE,QAAQ,GAAGzC,IAAI,CAACiB,EAAhB,GAAqB,GAAzC;EAEA,MAAM+F,cAAc,GAAGvB,CAAC,GAAGK,OAAO,GAAG,CAArC;EACA,MAAMmB,cAAc,GAAGtB,CAAC,GAAGG,OAAO,GAAG,CAArC;EACA,MAAMoB,cAAc,GAAGF,cAAc,GAAGhB,KAAK,GAAG,CAAhD;EACA,MAAMmB,cAAc,GAAGF,cAAc,GAAGjB,KAAK,GAAG,CAAhD;EACA,MAAM1F,CAAC,GAAG0G,cAAc,GAAG,CAA3B;EACA,MAAMzG,CAAC,GAAG0G,cAAc,GAAG,CAA3B;EAEA,MAAMG,KAAK,GAAGnB,IAAI,CAACoB,KAAL,EAAd;EAEA,MAAM3E,OAAO,GAAGF,aAAa,CAACuE,WAAD,EAAczG,CAAd,EAAiBC,CAAjB,EAAoBC,EAApB,EAAwBC,EAAxB,CAA7B;EACA,MAAM6G,YAAY,GAAG5E,OAAO,CAAC7B,MAA7B;EAEA,MAAMoD,IAAI,GAAGjB,UAAU,CAACqD,WAAD,EAAcxD,QAAd,EAAwBH,OAAxB,EAAiCqE,WAAjC,EAA8CzG,CAA9C,EAAiDC,CAAjD,EAAoDC,EAApD,EAAwDC,EAAxD,CAAvB,CA9CqC;;EAiDrC,OAAK,IAAIiB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGuC,IAAI,CAACjC,MAAzB,EAAiCN,CAAC,EAAlC,EAAsC;EACpC,QAAIuC,IAAI,CAACvC,CAAD,CAAJ,CAAQ,CAAR,MAAe,CAAnB,EAAsB;EACpB0F,MAAAA,KAAK,CAACG,IAAN,CAAW/G,EAAX,EAAeC,EAAf,EAAmBwD,IAAI,CAACvC,CAAD,CAAJ,CAAQ,CAAR,CAAnB,EAA+BuC,IAAI,CAACvC,CAAD,CAAJ,CAAQ,CAAR,CAA/B,EAA2C8F,MAA3C,CAAkD;EAAEC,QAAAA,KAAK,EAAE1B,SAAS,GAAG,CAArB;EAAwB2B,QAAAA,KAAK,EAAE;EAA/B,OAAlD;EACD,KAFD,MAEO;EACLN,MAAAA,KAAK,CAACG,IAAN,CAAW/G,EAAX,EAAeC,EAAf,EAAmBwD,IAAI,CAACvC,CAAD,CAAJ,CAAQ,CAAR,CAAnB,EAA+BuC,IAAI,CAACvC,CAAD,CAAJ,CAAQ,CAAR,CAA/B,EAA2C8F,MAA3C,CAAkD;EAAEC,QAAAA,KAAK,EAAE1B,SAAS,GAAG,CAArB;EAAwB2B,QAAAA,KAAK,EAAE;EAA/B,OAAlD;EACD;EACF,GAvDoC;;;EA0DrCN,EAAAA,KAAK,CAACO,OAAN,CAAcX,cAAd,EAA8BC,cAA9B,EAA8CO,MAA9C,CAAqD;EAAEC,IAAAA,KAAK,EAAE1B,SAAT;EAAoB2B,IAAAA,KAAK,EAAE;EAA3B,GAArD,EAA0FE,IAA1F,CAA+F,MAA/F,EAAuGC,IAAvG,CAA4G/B,OAA5G,EAAqHA,OAArH;EACAsB,EAAAA,KAAK,CAACO,OAAN,CAAcT,cAAd,EAA8BC,cAA9B,EAA8CK,MAA9C,CAAqD;EAAEC,IAAAA,KAAK,EAAE1B,SAAT;EAAoB2B,IAAAA,KAAK,EAAE;EAA3B,GAArD,EAA0FE,IAA1F,CAA+F,MAA/F,EAAuGC,IAAvG,CAA4G/B,OAAO,GAAGE,KAAtH,EAA6HF,OAAO,GAAGE,KAAvI,EA3DqC;;EA+DrC,OAAK,IAAItE,EAAC,GAAG,CAAb,EAAgBA,EAAC,GAAG,GAApB,EAAyBA,EAAC,IAAI,EAA9B,EAAkC;EAChC,QAAIoG,OAAO,GAAGR,YAAY,CAAC5F,EAAD,CAA1B;EACA,QAAIqG,SAAS,GAAGT,YAAY,CAAC5F,EAAC,GAAG,GAAL,CAA5B;EACA0F,IAAAA,KAAK,CAACG,IAAN,CAAWO,OAAO,CAAC,CAAD,CAAlB,EAAuBA,OAAO,CAAC,CAAD,CAA9B,EAAmCC,SAAS,CAAC,CAAD,CAA5C,EAAiDA,SAAS,CAAC,CAAD,CAA1D,EAA+DP,MAA/D,CAAsE;EAAEC,MAAAA,KAAK,EAAE1B,SAAT;EAAoB2B,MAAAA,KAAK,EAAE;EAA3B,KAAtE;EACD,GAnEoC;;;EAsErCN,EAAAA,KAAK,CAACY,MAAN,CAAarC,CAAC,GAAG,CAAjB,EAAoB6B,MAApB,CAA2B;EAAEC,IAAAA,KAAK,EAAE1B,SAAT;EAAoB2B,IAAAA,KAAK,EAAE;EAA3B,GAA3B,EAAgEE,IAAhE,CAAqE,SAArE,EAAgFK,IAAhF,CAAqF;EACnFzH,IAAAA,EAAE,EAAEA,EAAE,GAAGiF,CAAC,GAAC,CADwE;EAEnFhF,IAAAA,EAAE,EAAEA;EAF+E,GAArF,EAtEqC;;EA4ErC,OAAK,IAAIiB,GAAC,GAAG,CAAb,EAAgBA,GAAC,GAAG,GAApB,EAAyBA,GAAC,IAAI,EAA9B,EAAkC;EAChC,QAAMwG,aAAa,GAAGZ,YAAY,CAAC5F,GAAD,CAAZ,CAAgB,CAAhB,CAAtB;EACA0F,IAAAA,KAAK,CAACY,MAAN,CAAarC,CAAC,GAAG,EAAjB,EAAqB6B,MAArB,CAA4B;EAAEC,MAAAA,KAAK,EAAE1B,SAAT;EAAoB2B,MAAAA,KAAK,EAAE;EAA3B,KAA5B,EAAiEE,IAAjE,CAAsE,SAAtE,EAAiFK,IAAjF,CAAsF;EACpFzH,MAAAA,EAAE,EAAEA,EAAE,GAAGR,IAAI,CAAC2B,GAAL,CAASuG,aAAT,KAA2B5H,CAAC,GAAGwF,OAAO,GAAG,CAAzC,CAD2E;EAEpFrF,MAAAA,EAAE,EAAEA,EAAE,GAAGT,IAAI,CAAC4B,GAAL,CAASsG,aAAT,KAA2B3H,CAAC,GAAGuF,OAAO,GAAG,CAAzC;EAF2E,KAAtF;EAID;;EAEDsB,EAAAA,KAAK,CAACe,SAAN,CAAgB;EACdC,IAAAA,MAAM,EAAE,CAAC3F;EADK,GAAhB;EAIA,SAAOwD,IAAP;EACD;;;;;;;;;;;;;;;;;"}