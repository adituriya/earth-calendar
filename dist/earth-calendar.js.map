{"version":3,"file":"earth-calendar.js","sources":["../src/ellipse.js","../src/cusps.js","../src/data.js","../src/time.js","../src/days.js","../src/net.js","../src/calendar.js"],"sourcesContent":["/**\n * Convert a target angle, relative to the centre of the ellipse,\n * to the corresponding parametric ellipse angle.\n *\n * https://www.petercollingridge.co.uk/tutorials/computational-geometry/finding-angle-around-ellipse/\n *\n * @param {Number} target Target angle (relative to centre), in radians\n * @param {Number} a Length of semimajor axis\n * @param {Number} b Length of semimimor axis\n * @returns Parametric angle in radians\n */\nexport function parametricAngle (target, a, b) {\n\n  // Convert target angle to parametric angle\n  let t = Math.atan(Math.tan(target) * a / b)\n\n  // Determine what quarter the angle is in\n  const quarter = Math.ceil(target / (Math.PI / 2))\n\n  // Rotate result into the correct quarter\n  if (quarter === 2 || quarter === 3) {\n    t += Math.PI\n  } else if (quarter === 4) {\n    t += 2 * Math.PI\n  }\n\n  return t\n}\n\n/**\n * Calculate the length of the radius of an ellipse at a given angle\n * relative to the major axis.\n *\n * https://en.wikipedia.org/wiki/Ellipse#Polar_form_relative_to_center\n *\n * @param {Number} major Radius of major axis\n * @param {Number} minor Radius of minor axis\n * @param {Number} angle Angle in radians relative to major axis\n */\n export function ellipticRadius (major, minor, angle) {\n  const aSinThetaSquared = Math.pow(major * Math.sin(angle), 2)\n  const bCosThetaSquared = Math.pow(minor * Math.cos(angle), 2)\n  return major * minor / Math.sqrt(aSinThetaSquared + bCosThetaSquared)\n}\n\n\n/**\n * Find the linear distance between two points.\n *\n * @param {Array} p1 x, y\n * @param {Array} p2 x, y\n * @returns Number\n */\n// function linearDistance (p1, p2) {\n//   const xd = Math.abs(p2[0] - p1[0])\n//   const yd = Math.abs(p2[1] - p1[1])\n//   return Math.sqrt(xd * xd + yd * yd)\n// }\n","import { parametricAngle } from './ellipse.js'\n\nexport function createCusps (offset, a, b, cx, cy) {\n  const cusps = new Array(12)\n  const step = Math.PI / 6\n  let target = Math.PI + offset\n  let actual = target\n\n  for (let i = 0; i < 12; i++, target -= step) {\n    if (target < 0) {\n      target += Math.PI * 2\n    }\n    actual = parametricAngle(target, a, b)\n    cusps[i] = [\n      target,\n      actual,\n      cx + Math.cos(actual) * a,\n      cy + Math.sin(actual) * b\n    ]\n  }\n  return cusps\n}\n","\n/**\n * Data adapted from http://astropixels.com/ephemeris/soleq2001.html\n * and http://astropixels.com/ephemeris/perap2001.html\n * and https://www.yourzodiacsign.com/calendar/2021/\n * \n * Each year includes 14 dates: 12 sign cusps beginning with Aquarius,\n * followed by Perihelion and finally Aphelion. Times in UTC.\n */\nexport const yearlyData = {\n  '2021': [\n    '2021-01-19T20:39:00Z',\n    '2021-02-18T10:43:00Z',\n    '2021-03-20T09:37:00Z',\n    '2021-04-19T20:33:00Z',\n    '2021-05-20T19:37:00Z',\n    '2021-06-21T03:32:00Z',\n    '2021-07-22T14:26:00Z',\n    '2021-08-22T21:34:00Z',\n    '2021-09-22T19:21:00Z',\n    '2021-10-23T04:51:00Z',\n    '2021-11-22T02:33:00Z',\n    '2021-12-21T15:59:00Z',\n    '2021-01-02T13:51:00Z',\n    '2021-07-05T22:27:00Z'\n  ],\n  '2022': [\n    '2022-01-20T02:39:00Z',\n    '2022-02-18T16:42:00Z',\n    '2022-03-20T15:33:00Z',\n    '2022-04-20T02:24:00Z',\n    '2022-05-21T01:22:00Z',\n    '2022-06-21T09:13:00Z',\n    '2022-07-22T20:06:00Z',\n    '2022-08-23T03:16:00Z',\n    '2022-09-23T01:03:00Z',\n    '2022-10-23T10:35:00Z',\n    '2022-11-22T08:20:00Z',\n    '2022-12-21T21:48:00Z',\n    '2022-01-04T06:55:00Z',\n    '2022-07-04T07:11:00Z'\n  ],\n  // '2023': [\n  //   '2023-03-20T21:25:00Z',\n  //   '2023-06-21T14:58:00Z',\n  //   '2023-09-23T06:50:00Z',\n  //   '2023-12-22T03:28:00Z',\n  //   '2023-01-04T16:17:00Z',\n  //   '2023-07-06T20:07:00Z'\n  // ],\n  // '2024': [\n  //   '2024-03-20T03:07:00Z',\n  //   '2024-06-20T20:51:00Z',\n  //   '2024-09-22T12:44:00Z',\n  //   '2024-12-21T09:20:00Z',\n  //   '2024-01-03T00:39:00Z',\n  //   '2024-07-05T05:06:00Z'\n  // ],\n  // '2025': [\n  //   '2025-03-20T09:02:00Z',\n  //   '2025-06-21T02:42:00Z',\n  //   '2025-09-22T18:20:00Z',\n  //   '2025-12-21T15:03:00Z',\n  //   '2025-01-04T13:28:00Z',\n  //   '2025-07-03T19:55:00Z'\n  // ],\n  // '2026': [\n  //   '2026-03-20T14:46:00Z',\n  //   '2026-06-21T08:25:00Z',\n  //   '2026-09-23T00:06:00Z',\n  //   '2026-12-21T20:50:00Z',\n  //   '2026-01-03T17:16:00Z',\n  //   '2026-07-06T17:31:00Z'\n  // ],\n  // '2027': [\n  //   '2027-03-20T20:25:00Z',\n  //   '2027-06-21T14:11:00Z',\n  //   '2027-09-23T06:02:00Z',\n  //   '2027-12-22T02:43:00Z',\n  //   '2027-01-03T02:33:00Z',\n  //   '2027-07-05T05:06:00Z'\n  // ],\n  // '2028': [\n  //   '2028-03-20T02:17:00Z',\n  //   '2028-06-20T20:02:00Z',\n  //   '2028-09-22T11:45:00Z',\n  //   '2028-12-21T08:20:00Z',\n  //   '2028-01-05T12:28:00Z',\n  //   '2028-07-03T22:18:00Z'\n  // ],\n  // '2029': [\n  //   '2029-03-20T08:01:00Z',\n  //   '2029-06-21T01:48:00Z',\n  //   '2029-09-22T17:37:00Z',\n  //   '2029-12-21T14:14:00Z',\n  //   '2029-01-02T18:13:00Z',\n  //   '2029-07-06T05:12:00Z'\n  // ],\n  // '2030': [\n  //   '2030-03-20T13:51:00Z',\n  //   '2030-06-21T07:31:00Z',\n  //   '2030-09-22T23:27:00Z',\n  //   '2030-12-21T20:09:00Z',\n  //   '2030-01-03T10:12:00Z',\n  //   '2030-07-04T12:58:00Z'\n  // ]\n}\n","\n/**\n * Determine whether the provided year is a leap year in the Gregorian calendar\n * \n * @param {Integer} year \n * @returns Boolean\n */\nexport function isLeapYear (year) {\n  return ((year % 4 === 0) && (year % 100 !== 0)) || (year % 400 === 0)\n}\n\n/**\n * Convert dates to timestamps.\n * \n * @param {Array} yearData Astronomical data for a single year (from `data.js`)\n * @returns Array\n */\nexport function timesFromDates (yearData) {\n  return [\n    (new Date(yearData[0])).getTime(),\n    (new Date(yearData[1])).getTime(),\n    (new Date(yearData[2])).getTime(),\n    (new Date(yearData[3])).getTime(),\n    (new Date(yearData[4])).getTime(),\n    (new Date(yearData[5])).getTime(),\n    (new Date(yearData[6])).getTime(),\n    (new Date(yearData[7])).getTime(),\n    (new Date(yearData[8])).getTime(),\n    (new Date(yearData[9])).getTime(),\n    (new Date(yearData[10])).getTime(),\n    (new Date(yearData[11])).getTime(),\n    (new Date(yearData[12])).getTime(),\n    (new Date(yearData[13])).getTime()\n  ]\n}","import { parametricAngle } from './ellipse.js'\nimport { timesFromDates } from './time.js'\n\nfunction createSubDays (days, n, date, angle, increment, a, b, cx, cy) {\n  let theta = 0\n  for (let j = 0; j <= n; j++, angle -= increment) {\n    theta = parametricAngle(angle, a, b)\n    days.push([\n      angle,\n      theta,\n      cx + Math.cos(theta) * a,\n      cy + Math.sin(theta) * b,\n      date.getDate() === 1 ? 1 : 0\n    ])\n    date.setDate(date.getDate() + 1)\n  }\n}\n\nexport function createDays (year, yearData, cusps, rotation, a, b, cx, cy) {\n  // const daysInYear = isLeapYear(year) ? 366 : 365\n  // Extract times from yearData\n  const times = timesFromDates(yearData)\n  // const points = degrees.points\n  // let cardinal = points[180]\n  const newYear = new Date(year, 0, 1)\n  const newYearTime = newYear.getTime()\n  const nextYear = new Date(year + 1, 0, 1)\n  const nextYearTime = nextYear.getTime()\n\n  // Time between winter solstice and next new year\n  const delta1 = nextYearTime - times[11]\n  // Time between new year and perihelion\n  const delta2 = times[12] - newYearTime\n  // Estimate angle between new year's day and perihelion\n  let offset = rotation * delta2 / (delta1 + delta2)\n\n  let startAngle = Math.PI + offset\n\n  // Cusps array starts at winter solstice\n  let degreeIndex = 1\n  let endAngle = cusps[degreeIndex][0] // target angle\n  // let prevCuspDegreeAngle = 0\n  // let startDelta = 0\n  // let startAngleDelta = 0\n  // let t = 0\n  const days = []\n\n  // let startDateCusp = newYear\n  // let startDateMidnight = newYear\n  let startTimeCusp = newYearTime\n  let startTimeMidnight = newYearTime\n  let endDateCusp = null\n  let endDateMidnight = null\n  let endTimeCusp = 0\n  let endTimeMidnight = 0\n\n  let totalPeriod = 0\n\n  let fullAngle = 0\n  let actualAngle = 0\n  let nDays = 0\n  let increment = 0\n  let date = newYear\n  // let theta = 0\n  let startOffset = 0\n  let startFraction = 0\n  let endOffset = 0\n  let endFraction = 0\n\n  for (let i = 0; i < 12; i++) {\n\n    // Timestamp of next cusp\n    endTimeCusp = times[i]\n    // Local time of next cusp\n    endDateCusp = new Date(endTimeCusp)\n    // Local start of day before next cusp\n    endDateMidnight = new Date(endDateCusp.getFullYear(), endDateCusp.getMonth(), endDateCusp.getDate())\n    // Timestamp of local start of day before next cusp\n    endTimeMidnight = endDateMidnight.getTime()\n\n    // Total milliseconds of current period\n    totalPeriod = endTimeCusp - startTimeCusp\n\n    // Offset in ms between start cusp and start of next day\n    startOffset = startTimeMidnight - startTimeCusp\n    // Start offset as a fraction of the total period\n    startFraction = startOffset / totalPeriod\n    // Offset in ms between end cusp and start of that day\n    endOffset = endTimeCusp - endTimeMidnight\n    // End offset as a fraction of the total period\n    endFraction = endOffset / totalPeriod\n\n    // Full angle from cusp to cusp\n    fullAngle = startAngle - endAngle\n    while (fullAngle < 0) {\n      fullAngle += Math.PI * 2\n    }\n\n    // Actual angle from start calendar day to end calendar day\n    actualAngle = fullAngle - fullAngle * startFraction - fullAngle * endFraction\n\n    nDays = Math.round((endTimeMidnight - startTimeMidnight) / 86400000)\n    increment = actualAngle / nDays\n    startAngle -= fullAngle * startFraction\n\n    createSubDays (days, nDays, date, startAngle, increment, a, b, cx, cy)\n\n    // Advance to next pair of cusps\n    startAngle = endAngle\n\n    // Reset cusp angle\n    degreeIndex += 1\n    degreeIndex %= 12\n    endAngle = cusps[degreeIndex][0]\n\n    // Reset initial time to start of first day in next sign\n    endDateMidnight.setDate(endDateMidnight.getDate() + 1)\n    startTimeMidnight = endDateMidnight.getTime()\n    startTimeCusp = endTimeCusp\n  }\n\n  // New year of the following year\n  endTimeCusp = nextYearTime\n\n  // One day before the new year\n  nextYear.setDate(nextYear.getDate() - 1)\n  endTimeMidnight = nextYear.getTime()\n\n  // Total period\n  totalPeriod = endTimeCusp - startTimeCusp\n\n  // Offset in ms between start cusp and start of next day\n  startOffset = startTimeMidnight - startTimeCusp\n  // Start offset as a fraction of the total period\n  startFraction = startOffset / totalPeriod\n  // Offset in ms between end cusp and start of that day\n  endOffset = 86400000\n  // End offset as a fraction of the total period\n  endFraction = endOffset / totalPeriod\n\n  endAngle = Math.PI + offset\n\n  // Full angle from cusp to cusp\n  fullAngle = startAngle - endAngle\n  while (fullAngle < 0) {\n    fullAngle += Math.PI * 2\n  }\n\n  // Actual angle from start calendar day to end calendar day\n  actualAngle = fullAngle - fullAngle * startFraction - fullAngle * endFraction\n\n  nDays = Math.round((endTimeMidnight - startTimeMidnight) / 86400000)\n  increment = actualAngle / nDays\n  startAngle -= fullAngle * startFraction\n\n  createSubDays (days, nDays, date, startAngle, increment, a, b, cx, cy)\n\n  console.log(days)\n  return days\n}\n","\n\n/**\n * Look up the root URL for the current site (will not work if WordPress\n * is installed in a subdirectory).\n * \n * @returns WordPress site root url\n */\n export function rootUrl () {\n    let url = window.location.protocol + '//' + window.location.hostname\n    if (window.location.port) {\n      url += ':' + window.location.port\n    }\n    return url\n  }","import { createCusps } from './cusps.js'\nimport { yearlyData } from './data.js'\nimport { createDays } from './days.js'\nimport { svgEarth } from './earth.js'\nimport { rootUrl } from './net.js'\nimport { isLeapYear } from './time.js'\n\nimport { SVG } from '@svgdotjs/svg.js'\nimport jQuery from 'jquery'\nconst $ = jQuery\n\n/**\n * Render the Earth Calendar using SVG.js\n *\n * @param {String} element CSS query selector for target element\n * @returns {Object} SVG.js object\n */\nexport function drawCalendar (element) {\n\n  const container = document.querySelector(element)\n  const w = container.clientWidth\n  const h = Math.max(container.clientHeight, w * 0.8)\n  const cx = w / 2\n  const cy = h / 2\n  const padding = Math.round(w / 30)\n  const thickness = w / 450\n  const inset = padding * 0.75\n  const draw = SVG().addTo(element).size(w, h)\n\n  const outerDiameterX = w - padding * 2\n  const outerDiameterY = h - padding * 2\n  const innerDiameterX = outerDiameterX - inset * 2\n  const innerDiameterY = outerDiameterY - inset * 2\n  const a = outerDiameterX / 2\n  const b = outerDiameterY / 2\n\n  const time = new Date()\n  // time.setFullYear(time.getFullYear() + 1)\n  const currentYear = time.getFullYear() // local time\n  const daysInYear = isLeapYear(currentYear) ? 366 : 365\n  const yearData = yearlyData[currentYear]\n  // const cardinal0 = new Date(yearData[2])\n  // const cardinal1 = new Date(yearData[5])\n  // const cardinal2 = new Date(yearData[8])\n  const cardinal3 = new Date(yearData[11])\n  const perihelion = new Date(yearData[12])\n  // const aphelion = new Date(yearData[13])\n  // const cardinal0Time = cardinal0.getTime()\n  // const cardinal1Time = cardinal1.getTime()\n  // const cardinal2Time = cardinal2.getTime()\n  const cardinal3Time = cardinal3.getTime()\n  const perihelionTime = perihelion.getTime()\n  // const aphelionTime = aphelion.getTime()\n  // const aphelionDays = (aphelionTime - cardinal1Time) / 86400000\n  // Calculate the number of days between the winter solstice and the perihelion (projected forward a year)\n  const perihelionDays = (perihelionTime + daysInYear * 86400000 - cardinal3Time) / 86400000\n\n  // console.log(perihelionDays)\n\n  // Approximate orbital rotation for the current year (summer solstice relative to aphelion)\n  // let rotation = 360 * aphelionDays / daysInYear\n  // let rotationRad = rotation * Math.PI / 180\n\n  const offsetDeg = 360 * perihelionDays / daysInYear\n  const offsetRad = offsetDeg * Math.PI / 180\n  // const rotationRad = parametricAngle(offsetRad, a, b)\n  // const rotationDeg = rotationRad * 180 / Math.PI\n  const rotationRad = offsetRad\n  const rotationDeg = offsetDeg\n\n  const cusps = createCusps(rotationRad, a, b, cx, cy)\n\n  const rings = draw.group()\n\n  const days2 = createDays(currentYear, yearData, cusps, rotationRad, a, b, cx, cy)\n\n  const wpRoot = rootUrl()\n\n  // Look up all years (custom taxonomy for calendar_date post type)\n  $.ajax({\n    // url: wpRoot + '/wp-json/wp/v2/calendar_date?year=2'\n    url: wpRoot + '/wp-json/wp/v2/year'\n    // url: wpRoot + '/wp-json/'\n  }).done(function (data) {\n\n    let yearId = 0\n    for (let i = 0; i < data.length; i++) {\n      if (data[i].slug == currentYear) {\n        yearId = data[i].id\n        break\n      }\n    }\n\n    $.ajax({\n      url: wpRoot + '/wp-json/wp/v2/calendar_date?year=' + yearId\n    })\n\n  })\n\n\n  for (let i = 0; i < days2.length; i++) {\n    if (days2[i][4] === 1) {\n      rings.line(cx, cy, days2[i][2], days2[i][3]).stroke({ width: thickness / 2, color: '#c54' })\n    } else {\n      rings.line(cx, cy, days2[i][2], days2[i][3]).stroke({ width: thickness / 2, color: '#bbb' })\n    }\n  }\n\n  // Draw outer rings\n  rings.ellipse(outerDiameterX, outerDiameterY).stroke({ width: thickness, color: '#333' }).fill('none').move(padding, padding)\n  rings.ellipse(innerDiameterX, innerDiameterY).stroke({ width: thickness, color: '#333' }).fill('none').move(padding + inset, padding + inset)\n\n  // Draw sign cusps\n  for (let i = 0; i < 6; i++) {\n    let degree0 = cusps[i]\n    let degree180 = cusps[i + 6]\n    rings.line(degree0[2], degree0[3], degree180[2], degree180[3]).stroke({ width: thickness, color: '#37b' })\n  }\n\n  // Draw sun\n  rings.circle(h / 5).stroke({ width: thickness, color: '#643' }).fill('#f9f3df').attr({\n    cx: cx - w/4,\n    cy: cy\n  })\n\n  // Draw cardinal Earths\n  // for (let i = 0; i < 360; i += 90) {\n  //   const cardinalAngle = degreePoints[i][1]\n  //   rings.circle(h / 10).stroke({ width: thickness, color: '#333' }).fill('#ffffff').attr({\n  //     cx: cx + Math.cos(cardinalAngle) * (a - padding / 2),\n  //     cy: cy + Math.sin(cardinalAngle) * (b - padding / 2)\n  //   })\n  // }\n\n  // const globe = svgEarth(rings, cx, cy, rotationDeg, '#93d0d9', '#598742')\n\n  // globe.transform({\n  //   // translate: [cx, cy]\n  // })\n\n  rings.transform({\n    rotate: -rotationDeg\n  })\n\n  return draw\n}\n"],"names":["parametricAngle","target","a","b","t","Math","atan","tan","quarter","ceil","PI","createCusps","offset","cx","cy","cusps","Array","step","actual","i","cos","sin","yearlyData","isLeapYear","year","timesFromDates","yearData","Date","getTime","createSubDays","days","n","date","angle","increment","theta","j","push","getDate","setDate","createDays","rotation","times","newYear","newYearTime","nextYear","nextYearTime","delta1","delta2","startAngle","degreeIndex","endAngle","startTimeCusp","startTimeMidnight","endDateCusp","endDateMidnight","endTimeCusp","endTimeMidnight","totalPeriod","fullAngle","actualAngle","nDays","startOffset","startFraction","endOffset","endFraction","getFullYear","getMonth","round","console","log","rootUrl","url","window","location","protocol","hostname","port","$","jQuery","drawCalendar","element","container","document","querySelector","w","clientWidth","h","max","clientHeight","padding","thickness","inset","draw","SVG","addTo","size","outerDiameterX","outerDiameterY","innerDiameterX","innerDiameterY","time","currentYear","daysInYear","cardinal3","perihelion","cardinal3Time","perihelionTime","perihelionDays","offsetDeg","offsetRad","rotationRad","rotationDeg","rings","group","days2","wpRoot","ajax","done","data","yearId","length","slug","id","line","stroke","width","color","ellipse","fill","move","degree0","degree180","circle","attr","transform","rotate"],"mappings":";;;;;;;;EAAA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACO,SAASA,eAAT,CAA0BC,MAA1B,EAAkCC,CAAlC,EAAqCC,CAArC,EAAwC;EAE7C;EACA,MAAIC,CAAC,GAAGC,IAAI,CAACC,IAAL,CAAUD,IAAI,CAACE,GAAL,CAASN,MAAT,IAAmBC,CAAnB,GAAuBC,CAAjC,CAAR,CAH6C;;EAM7C,MAAMK,OAAO,GAAGH,IAAI,CAACI,IAAL,CAAUR,MAAM,IAAII,IAAI,CAACK,EAAL,GAAU,CAAd,CAAhB,CAAhB,CAN6C;;EAS7C,MAAIF,OAAO,KAAK,CAAZ,IAAiBA,OAAO,KAAK,CAAjC,EAAoC;EAClCJ,IAAAA,CAAC,IAAIC,IAAI,CAACK,EAAV;EACD,GAFD,MAEO,IAAIF,OAAO,KAAK,CAAhB,EAAmB;EACxBJ,IAAAA,CAAC,IAAI,IAAIC,IAAI,CAACK,EAAd;EACD;;EAED,SAAON,CAAP;EACD;EAmBD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;ECvDO,SAASO,WAAT,CAAsBC,MAAtB,EAA8BV,CAA9B,EAAiCC,CAAjC,EAAoCU,EAApC,EAAwCC,EAAxC,EAA4C;EACjD,MAAMC,KAAK,GAAG,IAAIC,KAAJ,CAAU,EAAV,CAAd;EACA,MAAMC,IAAI,GAAGZ,IAAI,CAACK,EAAL,GAAU,CAAvB;EACA,MAAIT,MAAM,GAAGI,IAAI,CAACK,EAAL,GAAUE,MAAvB;EACA,MAAIM,MAAM,GAAGjB,MAAb;;EAEA,OAAK,IAAIkB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,IAAIlB,MAAM,IAAIgB,IAAvC,EAA6C;EAC3C,QAAIhB,MAAM,GAAG,CAAb,EAAgB;EACdA,MAAAA,MAAM,IAAII,IAAI,CAACK,EAAL,GAAU,CAApB;EACD;;EACDQ,IAAAA,MAAM,GAAGlB,eAAe,CAACC,MAAD,EAASC,CAAT,EAAYC,CAAZ,CAAxB;EACAY,IAAAA,KAAK,CAACI,CAAD,CAAL,GAAW,CACTlB,MADS,EAETiB,MAFS,EAGTL,EAAE,GAAGR,IAAI,CAACe,GAAL,CAASF,MAAT,IAAmBhB,CAHf,EAITY,EAAE,GAAGT,IAAI,CAACgB,GAAL,CAASH,MAAT,IAAmBf,CAJf,CAAX;EAMD;;EACD,SAAOY,KAAP;EACD;;ECpBD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACO,IAAMO,UAAU,GAAG;EACxB,UAAQ,CACN,sBADM,EAEN,sBAFM,EAGN,sBAHM,EAIN,sBAJM,EAKN,sBALM,EAMN,sBANM,EAON,sBAPM,EAQN,sBARM,EASN,sBATM,EAUN,sBAVM,EAWN,sBAXM,EAYN,sBAZM,EAaN,sBAbM,EAcN,sBAdM,CADgB;EAiBxB,UAAQ,CACN,sBADM,EAEN,sBAFM,EAGN,sBAHM,EAIN,sBAJM,EAKN,sBALM,EAMN,sBANM,EAON,sBAPM,EAQN,sBARM,EASN,sBATM,EAUN,sBAVM,EAWN,sBAXM,EAYN,sBAZM,EAaN,sBAbM,EAcN,sBAdM,CAjBgB;EAkCxB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAhGwB,CAAnB;;ECRP;EACA;EACA;EACA;EACA;EACA;EACO,SAASC,UAAT,CAAqBC,IAArB,EAA2B;EAChC,SAASA,IAAI,GAAG,CAAP,KAAa,CAAd,IAAqBA,IAAI,GAAG,GAAP,KAAe,CAArC,IAA6CA,IAAI,GAAG,GAAP,KAAe,CAAnE;EACD;EAED;EACA;EACA;EACA;EACA;EACA;;EACO,SAASC,cAAT,CAAyBC,QAAzB,EAAmC;EACxC,SAAO,CACJ,IAAIC,IAAJ,CAASD,QAAQ,CAAC,CAAD,CAAjB,CAAD,CAAwBE,OAAxB,EADK,EAEJ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"}